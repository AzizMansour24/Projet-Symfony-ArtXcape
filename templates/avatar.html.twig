<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Créer votre Avatar 3D</title>
	<style>
		body {
			margin: 0;
			padding: 20px;
			font-family: Arial, sans-serif; 
			background-color: #f5f5f5;
		}
		.container {
			position: fixed;
			bottom: 20px;
			left: 0;
			right: 0;
			padding: 0 20px;
			background: rgba(255, 255, 255, 0.9);
		}
		.form-group {
			display: flex;
			gap: 10px;
			max-width: 800px;
			margin: 0 auto;
			padding: 10px;
		}
		.form-control {
			flex: 1;
			padding: 8px;
			border: 1px solid #ddd;
			border-radius: 4px;
		}
		.btn-primary {
			background-color: #007bff;
			color: white;
			border: none;
			padding: 8px 20px;
			border-radius: 4px;
			cursor: pointer;
		}
		.btn-primary:hover {
			background-color: #0056b3;
		}
		iframe {
			border: none;
			width: 100%;
			height: 90vh;
		}
	</style>
</head>
<body>
	<!-- Iframe Ready Player Me -->
	<iframe src="https://readyplayer.me/avatar?frameApi" 
		allow="camera *; microphone *; clipboard-write"
		style="width: 100%; height: 100vh; border: none;">
	</iframe>

	<div class="container">
		<div class="form-group">
			<input type="text" id="avatar-url-input" class="form-control" readonly>
			<button class="btn-primary" id="save-avatar">Enregistrer mon Avatar</button>
		</div>
	</div>

	<script>
	document.addEventListener("DOMContentLoaded", function () {
		const iframe = document.querySelector('iframe');
		const saveButton = document.getElementById("save-avatar");
		const urlInput = document.getElementById("avatar-url-input");

		iframe.onload = function () {
			iframe.contentWindow.postMessage(
				JSON.stringify({
					target: "readyplayerme",
					type: "subscribe",
					eventName: "v1.avatar.exported"
				}),
				"*"
			);
		};

		window.addEventListener("message", (event) => {
			try {
				let message = event.data;
				if (typeof message === "string") {
					message = JSON.parse(message);
				}

				if (message.source === "readyplayerme" && message.eventName === "v1.avatar.exported") {
					urlInput.value = message.data.url;
				}
			} catch (error) {
				console.error("Erreur lors du traitement du message:", error);
			}
		});

		saveButton.addEventListener("click", function () {
			const avatarUrl = urlInput.value.trim();
			
			if (!avatarUrl) {
				alert("Veuillez attendre que l'avatar soit généré");
				return;
			}

			fetch("{{ path('user_update_avatar3d') }}", {
				method: "POST",
				headers: { 
					"Content-Type": "application/x-www-form-urlencoded"
				},
				body: "avatar_url=" + encodeURIComponent(avatarUrl)
			})
			.then(response => response.json())
			.then(data => {
				if (data.success) {
					alert("Avatar enregistré avec succès !");
					window.location.href = "{{ path('app_register') }}";
				} else {
					alert(data.message || "Erreur lors de l'enregistrement de l'avatar");
				}
			})
			.catch(error => {
				console.error("Erreur:", error);
				alert("Une erreur est survenue lors de l'enregistrement de l'avatar");
			});
		});
	});
	</script>
</body>
</html>
